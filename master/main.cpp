#include "../VecH/Vector.h"

int main()
{
    //! Конструктор без параметров
    Vector vec1;
    std::cout << "Vector v1 created successfully!\n";
    std::cout << "=====================================================================\n";

    //! Конструктор с параметрами
    double arr[] = {1.1, 3.3};
    Vector vec2(arr, 2);
    std::cout << "Конструктор с параметрами\nvec2 = ";
    vec2.printVec();
    std::cout << "=====================================================================\n";

    //PushBack
    vec2.pushBack(4.4);
    std::cout << "PushBack '4.4'\nvec2 = ";
    vec2.printVec();
    std::cout << "=====================================================================\n";

    //PushFront
    vec2.pushFront(0);
    std::cout << "PushFront '0'\nvec2 = ";
    vec2.printVec();
    std::cout << "=====================================================================\n";

    //Вставка элемента value в позицию pos
    vec2.insert(2.2, 2);
    std::cout << "Вставка элемента '2.2' в позицию 3\nvec2 = ";
    vec2.printVec();
    std::cout << "=====================================================================\n";

    // Вставка массива элементов типа ValueType в позицию pos
    double arr2[] = {1.1, 4.4, 5.5};
    Vector vec3(arr2, 3);

    double tmp_arr[] = {2.2, 3.3};
    vec3.insert(tmp_arr, 2, 1);
    std::cout << "Вставка tmp_arr в позицию 2\nvec3 = ";
    vec3.printVec();
    std::cout << "=====================================================================\n";

    // Вставка содержимого вектора в позицию pos
    double arr3[] = {1.1, 4.4, 5.5};
    Vector vec4(arr2, 3);

    double tmp_arr2[] = {2.2, 3.3};
    Vector tmp_vec(tmp_arr,2);
    vec4.insert(tmp_vec, 1);
    std::cout << "Вставка tmp_vec в позицию 2\nvec4 = ";
    vec4.printVec();
    std::cout << "=====================================================================\n";

    // Удаление с конца
    vec4.popBack();
    std::cout << "Удаление с конца\nvec4 = ";
    vec4.printVec();
    std::cout << "=====================================================================\n";

    // Удаление из начала
    vec4.popFront();
    std::cout << "Удаление из начала\nvec4 = ";
    vec4.printVec();
    std::cout << "=====================================================================\n";

    // Удалить элемент из вектора
    vec3.erase(1, 3);
    std::cout << "Удалить 2 элемента из вектора\nvec3 = ";
    vec3.printVec();
    std::cout << "=====================================================================\n";

    // Удалить элемент из вектора
    double arr4[] = {1.1, 2.2, 3.3, 4.4, 5.5};
    Vector vec5(arr4, 5);
    vec5.eraseBetween(1, 4);
    std::cout << "Удалить с 2.2 до 5.5 элемент из вектора\nvec5 = ";
    vec5.printVec();
    std::cout << "=====================================================================\n";

    // Поиск первого вхождения значения
    std::cout << "Поиск первого вхождения '5.5'\nIndex = " << vec5.find(5.5) << std::endl;
    std::cout << "=====================================================================\n";

    //SIZE      CAPACITY        LOADFACTOR      SHRINKFIT       RESERVE
    std::cout << "size v5\t\t\t\t| " << vec5.size() << "\n";
    std::cout << "=====================================================================\n";

    std::cout << "capacity v5\t\t\t\t| " << vec5.capacity() << "\n";
    std::cout << "=====================================================================\n";

    std::cout << "loadFactor v5\t\t\t\t| " << vec5.loadFactor() << "\n";
    std::cout << "=====================================================================\n";

    vec5.shrinkToFit();
    std::cout << "v5.shrinkToFit\t\t\t\t| Capacity = " << vec5.capacity() << "\n";
    std::cout << "=====================================================================\n";

    vec5.reserve(5);
    std::cout << "v5.reserve\t\t\t\t| Capacity = " << vec5.capacity() << "\n";
    std::cout << "=====================================================================\n";
}
